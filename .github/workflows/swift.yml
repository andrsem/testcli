name: Swift

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]


format: |
    set -e

    # Run swift format and check for changes
    swift format . -ri
    FORMAT_FAILED=0
    if [[ -n "$(git status --porcelain)" ]]; then
      echo "❌ swift format modified files. Please run 'swift format . -ri' locally."
      git status
      FORMAT_FAILED=1
    fi

    # Run swift format lint and check for output
    LINT_OUTPUT=$(swift format lint . -r)
    echo "$LINT_OUTPUT"
    LINT_FAILED=0
    if [[ -n "$LINT_OUTPUT" ]]; then
      echo "❌ swift format lint found issues."
      LINT_FAILED=1
    fi

    # Fail if either format or lint failed
    if [[ $FORMAT_FAILED -eq 1 || $LINT_FAILED -eq 1 ]]; then
      exit 1
    fi

jobs:
  macos-build:
    name: macOS
    runs-on: macos-26
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Swift version
        run: xcrun swift --version
      - name: Select Xcode
        run: echo "DEVELOPER_DIR=/Applications/Xcode_26.0.app"
      - name: "Lint and Format"
        run: swift format . -ri && swift format lint . -r
      - name: Check formatting and lint
        run: ${{ format }}
      - name: Build / Test
        run: xcrun swift test && xcrun swift test -c release
        timeout-minutes: 60

  linux-build:
    name: Linux
    strategy:
      fail-fast: false
      matrix:
        swift: ["nightly-main", "6.2"]
        include:
          - swift: "nightly-main"
            container: "swiftlang/swift:nightly-main"
            continueOnError: true
          - swift: "6.2"
            container: "swift:6.2"
    runs-on: ubuntu-latest
    container: ${{ matrix.container }}
    continue-on-error: ${{ matrix.continueOnError == true }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Swift version
        run: swift --version
      - name: Build / Test
        run: swift test && swift test -c release
        timeout-minutes: 60

  linux-static-sdk-build:
    name: Static Linux Swift SDK Build
    runs-on: ubuntu-latest
    container: "swift:6.2"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Swift version
        run: swift --version
      - name: Install Static Linux Swift SDK and build
        run: |
          swift sdk install https://download.swift.org/swift-6.2-release/static-sdk/swift-6.2-RELEASE/swift-6.2-RELEASE_static-linux-0.0.1.artifactbundle.tar.gz --checksum d2225840e592389ca517bbf71652f7003dbf45ac35d1e57d98b9250368769378
      - name: Build Static Linux SDK
        run: swift build --swift-sdk x86_64-swift-linux-musl && swift build -c release --swift-sdk x86_64-swift-linux-musl
        timeout-minutes: 60
